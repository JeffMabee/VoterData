{
	"name": "Load Voter Table",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RawImportTable",
						"type": "DatasetReference"
					},
					"name": "wrkRawVoterData"
				},
				{
					"dataset": {
						"referenceName": "tblVoters",
						"type": "DatasetReference"
					},
					"name": "VoterTable"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "NewVoters"
				}
			],
			"scriptLines": [
				"source(output(",
				"          LASTN as string,",
				"          FIRSTN as string,",
				"          MIDDLEN as string,",
				"          PREFIXN as string,",
				"          SUFFIXN as string,",
				"          CNTYIDNUM as string,",
				"          SOSIDNUM as string,",
				"          STNUM as string,",
				"          STDIR as string,",
				"          STNAME as string,",
				"          APT as string,",
				"          CITY as string,",
				"          ZIP as string,",
				"          MADDR1 as string,",
				"          MADDR2 as string,",
				"          MCITY as string,",
				"          MSTATE as string,",
				"          MZIP as string,",
				"          MCOUNTRY as string,",
				"          REGDATE as string,",
				"          BIRTHYEAR as string,",
				"          VOTERUPDT as string,",
				"          VOTERSTAT as string,",
				"          PARTYAFFIL as string,",
				"          LASTVOTE as string,",
				"          PRSID as string,",
				"          PRECNAME as string,",
				"          {20231107G} as string,",
				"          {20231107G_TYPE} as string,",
				"          {20230808S} as string,",
				"          {20230808S_TYPE} as string,",
				"          {20230502S} as string,",
				"          {20230502S_TYPE} as string,",
				"          {20221108G} as string,",
				"          {20221108G_TYPE} as string,",
				"          {20220802P} as string,",
				"          {20220802P_TYPE} as string,",
				"          {20220503P} as string,",
				"          {20220503P_TYPE} as string,",
				"          {20211102G} as string,",
				"          {20211102G_TYPE} as string,",
				"          {20210504S} as string,",
				"          {20210504S_TYPE} as string,",
				"          {20201103G} as string,",
				"          {20201103G_TYPE} as string,",
				"          {20200317P} as string,",
				"          {20200317P_TYPE} as string,",
				"          {20191105G} as string,",
				"          {20191105G_TYPE} as string,",
				"          {20190507P} as string,",
				"          {20190507P_TYPE} as string,",
				"          {20181106G} as string,",
				"          {20181106G_TYPE} as string,",
				"          {20180807S} as string,",
				"          {20180807S_TYPE} as string,",
				"          {20180508P} as string,",
				"          {20180508P_TYPE} as string,",
				"          {20171107G} as string,",
				"          {20171107G_TYPE} as string,",
				"          {20170502S} as string,",
				"          {20170502S_TYPE} as string,",
				"          {20161108G} as string,",
				"          {20161108G_TYPE} as string,",
				"          {20160802S} as string,",
				"          {20160802S_TYPE} as string,",
				"          {20160315P} as string,",
				"          {20160315P_TYPE} as string,",
				"          {20151103G} as string,",
				"          {20151103G_TYPE} as string,",
				"          {20150505S} as string,",
				"          {20150505S_TYPE} as string,",
				"          {20141104G} as string,",
				"          {20141104G_TYPE} as string,",
				"          {20140506P} as string,",
				"          {20140506P_TYPE} as string,",
				"          {20131105G} as string,",
				"          {20131105G_TYPE} as string,",
				"          {20130507S} as string,",
				"          {20130507S_TYPE} as string,",
				"          {20130205S} as string,",
				"          {20130205S_TYPE} as string,",
				"          {20121106G} as string,",
				"          {20121106G_TYPE} as string,",
				"          {20120807S} as string,",
				"          {20120807S_TYPE} as string,",
				"          {20120306P} as string,",
				"          {20120306P_TYPE} as string,",
				"          {20111108G} as string,",
				"          {20111108G_TYPE} as string,",
				"          {20110503S} as string,",
				"          {20110503S_TYPE} as string,",
				"          {20101102G} as string,",
				"          {20101102G_TYPE} as string,",
				"          {20100504P} as string,",
				"          {20100504P_TYPE} as string,",
				"          {20100202S} as string,",
				"          {20100202S_TYPE} as string,",
				"          {20091103G} as string,",
				"          {20091103G_TYPE} as string,",
				"          {20090804S} as string,",
				"          {20090804S_TYPE} as string,",
				"          {20090505S} as string,",
				"          {20090505S_TYPE} as string,",
				"          {20081104G} as string,",
				"          {20081104G_TYPE} as string,",
				"          {20080805S} as string,",
				"          {20080805S_TYPE} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> wrkRawVoterData",
				"source(output(",
				"          VOTERID as long,",
				"          LASTN as string,",
				"          FIRSTN as string,",
				"          MIDDLEN as string,",
				"          PREFIXN as string,",
				"          SUFFIXN as string,",
				"          CNTYIDNUM as string,",
				"          STNUM as string,",
				"          STDIR as string,",
				"          STNAME as string,",
				"          APT as string,",
				"          CITY as string,",
				"          ZIP as string,",
				"          REGDATE as string,",
				"          BIRTHYEAR as string,",
				"          VOTERUPDT as string,",
				"          VOTERSTAT as string,",
				"          PARTYAFFIL as string,",
				"          LASTVOTE as string,",
				"          PRSID as string,",
				"          Latitude as decimal(9,6),",
				"          Longitude as decimal(9,6),",
				"          Phone as string,",
				"          OEA as boolean,",
				"          DTM as timestamp,",
				"          AltPhone as string,",
				"          RouteID as integer,",
				"          PRECINCT as integer,",
				"          PRECINCT_SP as integer,",
				"          PRECINCTID as integer,",
				"          SOSIDNUM as string,",
				"          StudentFlag as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> VoterTable",
				"wrkRawVoterData, VoterTable exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:true,",
				"     broadcast: 'auto')~> NewVoters"
			]
		}
	}
}