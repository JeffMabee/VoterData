{
	"name": "Master_FRANKLIN",
	"properties": {
		"activities": [
			{
				"name": "Drop Raw Table",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "DROP TABLE IF EXISTS [dbo].rawVoter_Franklin;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Load Raw FRANKLIN data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Drop Raw Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "FRANKLIN_RawFIle",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "RawFranklinTable",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Add Index to Table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Load Raw FRANKLIN data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "CREATE CLUSTERED INDEX IX_P on rawVoter_Franklin([STATE ID])"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "Build Update Table",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Add Index to Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spI_CreateWorkingVotersToBeUpdated_REG]",
					"storedProcedureParameters": {
						"CountyID": {
							"value": {
								"value": "@pipeline().parameters.CountyID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Add New Elections",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Build Update Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spI_ETL_LoadNewElections_FRANKLIN]"
				},
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Check Precincts",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Add New Elections",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": ";WITH CTE AS\n(\nSELECT DISTINCT PRECINCT,[PRECINCT SPLIT],[PRECINCT NAME WITH SPLIT],[CITY OR VILLAGE],SCHOOL\nfrom rawVoter_Franklin t1\n)\nSELECT COUNT(*) Recs\nfrom CTE t1 \nLEFT JOIN tblPrecincts t2 on t1.PRECINCT = t2.PRECINCT and t1.[PRECINCT SPLIT] = t2.PRECINCT_SP\nWHERE t2.PRECINCT IS NULL\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			},
			{
				"name": "GetProcCount",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Check Precincts",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "PREC_COUNT",
					"value": {
						"value": "@activity('Check Precincts').output.resultSets[0].rows[0].Recs\r\n",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "GetProcCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(variables('PREC_COUNT'),0)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Fail1",
							"type": "Fail",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"message": "CHECK PRCINCTS",
								"errorCode": "500"
							}
						}
					]
				}
			},
			{
				"name": "Load New Voters",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Load New Franklin Voters",
						"type": "DataFlowReference",
						"parameters": {
							"CountyID": {
								"value": "@pipeline().parameters.CountyID",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Update voters",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Load New Voters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "UpdateFranklinVoterData",
						"type": "DataFlowReference",
						"parameters": {
							"CountyID": {
								"value": "@pipeline().parameters.CountyID",
								"type": "Expression"
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "Add Voter History",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Update voters",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spI_AddVoterHistory_FRANKLIN]"
				},
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Add to Supporter list",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Add Voter History",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spU_PostLoadUpdateSupporterList]"
				},
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Purge old voters",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Add to Supporter list",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spD_ETL_PurgeOldVoters]",
					"storedProcedureParameters": {
						"CountyID": {
							"value": {
								"value": "@pipeline().parameters.CountyID",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "VoterDatabase",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"CountyID": {
				"type": "int",
				"defaultValue": 1
			}
		},
		"variables": {
			"PREC_COUNT": {
				"type": "Integer",
				"defaultValue": 0
			}
		},
		"annotations": []
	}
}